---
import Layout from "../layouts/Layout.astro";
import Card from "../components/Card.astro";
import PalmApiFecth from "../api/fetchApi";

let location1 = "";
let destination1 = "";
let loading = false;
let res = null;
const errors = { location: "", destination: "" };
// console.log(Astro.request);
if (Astro.request.method === "POST") {
  loading = true;
  try {
    const data = await Astro.request.formData();
    const location = data.get("location");
    const destination = data.get("destination");
    location1 = location?.toString().trim();
    destination1 = destination?.toString().trim();
    console.log(location, destination);
    if (typeof location !== "string") {
      errors.location += "Please enter a location. ";
    }

    if (typeof destination !== "string") {
      errors.destination += "Please enter a destination. ";
    }
    res = await PalmApiFecth(location as string, destination as string);

    loading = false;


    // const hasErrors = Object.values(errors).some((msg) => msg);
  } catch (error) {
    if (error instanceof Error) {
      console.error(error.message);
    }
  }
}
---

<Layout title="Welcome to Astro.">
  <main>
    <svg
      class="astro-a pt-10"
      xmlns="http://www.w3.org/2000/svg"
      width="32"
      height="32"
      style={{
        opacity: 0.1,
      }}
      viewBox="0 0 14 14"
      ><g
        fill="none"
        stroke="currentColor"
        stroke-linecap="round"
        stroke-linejoin="round"
        ><path d="M10.5 8.5a5 5 0 1 1-8.25-3.8"></path><path
          d="M5.28 6.65a1.6 1.6 0 0 0-.16.7a1.52 1.52 0 0 0 1.53 1.53a.77.77 0 0 1 .77.77v3.47M.57 9.27h1.85A1.54 1.54 0 0 1 4 10.81v2.45m9.26-11.39l-1-.34a.34.34 0 0 0-.39.13l-.73 1.13l-4-2A2.49 2.49 0 0 0 3.53 2.1A.68.68 0 0 0 4 3l2.61.84l.26.09l.49 1.68a.36.36 0 0 0 .24.25l1.18.38a.37.37 0 0 0 .48-.41L9 4.58h.17l2.55.83a.67.67 0 0 0 .85-.41l.9-2.77a.34.34 0 0 0-.21-.36Z"
        ></path></g
      ></svg
    >

    <h1><span class="text-gradient">AI</span> Trip Planner</h1>

    <form method="POST">
      <div class="flex justify-center">
        <input type="text" name="location" id="" class="w-40 pl-2" required />
        <span class="mx-4">To</span>
        <input
          type="text"
          name="destination"
          id=""
          class="w-40 pl-2"
          required
        />
      </div>
      {errors.destination && <p>{errors.destination}</p>}

      <div class="flex justify-center pb-10">
        <button
          class="bg-purple-800/30 hover:bg-purple-700/30 text-white font-bold py-2 px-4 rounded"
        >
          Lets Go!
        </button>
      </div>
    </form>
    {
      loading && (
        <svg
          xmlns="http://www.w3.org/2000/svg"
          xmlns:xlink="http://www.w3.org/1999/xlink"
          style="margin: auto; background: none; display: block; shape-rendering: auto;"
          class="w-20 h-20 text-white "
          viewBox="0 0 100 100"
          preserveAspectRatio="xMidYMid"
        >
          <circle
            cx="50"
            cy="50"
            fill="none"
            stroke="#ffffff"
            stroke-width="10"
            r="35"
            stroke-dasharray="164.93361431346415 56.97787143782138"
          >
            <animateTransform
              attributeName="transform"
              type="rotate"
              repeatCount="indefinite"
              dur="1s"
              values="0 50 50;360 50 50"
              keyTimes="0;1"
            />
          </circle>
        </svg>
      )
    }
    <Card
      title={`Trip ${location1} to ${destination1} `}
      set:html={res.replace(/\n/g, "<br />")}
      body={res}
    />
    <!-- <ul role="list" class="link-card-grid">
      <Card
        href="https://docs.astro.build/"
        title="Documentation"
        body="Learn how Astro works and explore the official API docs."
      />
      <Card
        href="https://astro.build/integrations/"
        title="Integrations"
        body="Supercharge your project with new frameworks and libraries."
      />
      <Card
        href="https://astro.build/themes/"
        title="Themes"
        body="Explore a galaxy of community-built starter themes."
      />
      <Card
        href="https://astro.build/chat/"
        title="Community"
        body="Come say hi to our amazing Discord community. ❤️"
      />
    </ul> -->
  </main>
</Layout>

<style>
  main {
    margin: auto;
    padding: 1rem;
    width: 800px;
    max-width: calc(100% - 2rem);
    color: white;
    font-size: 20px;
    line-height: 1.6;
  }
  .astro-a {
    position: absolute;
    top: -32px;
    left: 50%;
    transform: translatex(-50%);
    width: 220px;
    height: auto;
    z-index: -1;
  }
  h1 {
    font-size: 4rem;
    font-weight: 700;
    line-height: 1;
    text-align: center;
    margin-bottom: 0.5em;
  }
  .text-gradient {
    background-image: var(--accent-gradient);
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    background-size: 400%;
    background-position: 0%;
  }
  .instructions {
    margin-bottom: 2rem;
    border: 1px solid rgba(var(--accent-light), 25%);
    background: linear-gradient(
      rgba(var(--accent-dark), 66%),
      rgba(var(--accent-dark), 33%)
    );
    padding: 1.5rem;
    border-radius: 8px;
  }
  input {
    margin-bottom: 2rem;
    border: 1px solid rgba(var(--accent-light), 25%);
    background: linear-gradient(
      rgba(var(--accent-dark), 66%),
      rgba(var(--accent-dark), 33%)
    );
    /* padding: 1.5rem; */
    border-radius: 8px;
  }
  /* .instructions code {
    font-size: 0.8em;
    font-weight: bold;
    background: rgba(var(--accent-light), 12%);
    color: rgb(var(--accent-light));
    border-radius: 4px;
    padding: 0.3em 0.4em;
  }
  .instructions strong {
    color: rgb(var(--accent-light));
  } */
  .link-card-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(24ch, 1fr));
    gap: 2rem;
    padding: 0;
  }
</style>
